[{"path":[]},{"path":"https://wright13.github.io/imd-fetchaquarius/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"CC0 1.0 Universal","title":"CC0 1.0 Universal","text":"CREATIVE COMMONS CORPORATION LAW FIRM PROVIDE LEGAL SERVICES. DISTRIBUTION DOCUMENT CREATE ATTORNEY-CLIENT RELATIONSHIP. CREATIVE COMMONS PROVIDES INFORMATION “-” BASIS. CREATIVE COMMONS MAKES WARRANTIES REGARDING USE DOCUMENT INFORMATION WORKS PROVIDED HEREUNDER, DISCLAIMS LIABILITY DAMAGES RESULTING USE DOCUMENT INFORMATION WORKS PROVIDED HEREUNDER.","code":""},{"path":"https://wright13.github.io/imd-fetchaquarius/LICENSE.html","id":"statement-of-purpose","dir":"","previous_headings":"","what":"Statement of Purpose","title":"CC0 1.0 Universal","text":"laws jurisdictions throughout world automatically confer exclusive Copyright Related Rights (defined ) upon creator subsequent owner(s) (, “owner”) original work authorship /database (, “Work”). Certain owners wish permanently relinquish rights Work purpose contributing commons creative, cultural scientific works (“Commons”) public can reliably without fear later claims infringement build upon, modify, incorporate works, reuse redistribute freely possible form whatsoever purposes, including without limitation commercial purposes. owners may contribute Commons promote ideal free culture production creative, cultural scientific works, gain reputation greater distribution Work part use efforts others. /purposes motivations, without expectation additional consideration compensation, person associating CC0 Work (“Affirmer”), extent owner Copyright Related Rights Work, voluntarily elects apply CC0 Work publicly distribute Work terms, knowledge Copyright Related Rights Work meaning intended legal effect CC0 rights. Copyright Related Rights. Work made available CC0 may protected copyright related neighboring rights (“Copyright Related Rights”). Copyright Related Rights include, limited , following: right reproduce, adapt, distribute, perform, display, communicate, translate Work; moral rights retained original author(s) /performer(s); publicity privacy rights pertaining person’s image likeness depicted Work; rights protecting unfair competition regards Work, subject limitations paragraph 4(), ; rights protecting extraction, dissemination, use reuse data Work; database rights (arising Directive 96/9/EC European Parliament Council 11 March 1996 legal protection databases, national implementation thereof, including amended successor version directive); similar, equivalent corresponding rights throughout world based applicable law treaty, national implementations thereof. Waiver. greatest extent permitted , contravention , applicable law, Affirmer hereby overtly, fully, permanently, irrevocably unconditionally waives, abandons, surrenders Affirmer’s Copyright Related Rights associated claims causes action, whether now known unknown (including existing well future claims causes action), Work () territories worldwide, (ii) maximum duration provided applicable law treaty (including future time extensions), (iii) current future medium number copies, (iv) purpose whatsoever, including without limitation commercial, advertising promotional purposes (“Waiver”). Affirmer makes Waiver benefit member public large detriment Affirmer’s heirs successors, fully intending Waiver shall subject revocation, rescission, cancellation, termination, legal equitable action disrupt quiet enjoyment Work public contemplated Affirmer’s express Statement Purpose. Public License Fallback. part Waiver reason judged legally invalid ineffective applicable law, Waiver shall preserved maximum extent permitted taking account Affirmer’s express Statement Purpose. addition, extent Waiver judged Affirmer hereby grants affected person royalty-free, non transferable, non sublicensable, non exclusive, irrevocable unconditional license exercise Affirmer’s Copyright Related Rights Work () territories worldwide, (ii) maximum duration provided applicable law treaty (including future time extensions), (iii) current future medium number copies, (iv) purpose whatsoever, including without limitation commercial, advertising promotional purposes (“License”). License shall deemed effective date CC0 applied Affirmer Work. part License reason judged legally invalid ineffective applicable law, partial invalidity ineffectiveness shall invalidate remainder License, case Affirmer hereby affirms () exercise remaining Copyright Related Rights Work (ii) assert associated claims causes action respect Work, either case contrary Affirmer’s express Statement Purpose. Limitations Disclaimers. trademark patent rights held Affirmer waived, abandoned, surrendered, licensed otherwise affected document. Affirmer offers Work -makes representations warranties kind concerning Work, express, implied, statutory otherwise, including without limitation warranties title, merchantability, fitness particular purpose, non infringement, absence latent defects, accuracy, present absence errors, whether discoverable, greatest extent permissible applicable law. Affirmer disclaims responsibility clearing rights persons may apply Work use thereof, including without limitation person’s Copyright Related Rights Work. , Affirmer disclaims responsibility obtaining necessary consents, permissions rights required use Work. Affirmer understands acknowledges Creative Commons party document duty obligation respect CC0 use Work.","code":""},{"path":"https://wright13.github.io/imd-fetchaquarius/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Sarah Wright. Author, maintainer.","code":""},{"path":"https://wright13.github.io/imd-fetchaquarius/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Wright S (2023). fetchaquarius: Import Aquarius Data R. R package version 0.0.0.9000, https://wright13.github.io/imd-fetchaquarius/.","code":"@Manual{,   title = {fetchaquarius: Import Aquarius Data into R},   author = {Sarah Wright},   year = {2023},   note = {R package version 0.0.0.9000},   url = {https://wright13.github.io/imd-fetchaquarius/}, }"},{"path":"https://wright13.github.io/imd-fetchaquarius/reference/connectToAquarius.html","id":null,"dir":"Reference","previous_headings":"","what":"Connect to Aquarius server — connectToAquarius","title":"Connect to Aquarius server — connectToAquarius","text":"use functions package get data Aquarius, must use function log . accessing NPS data, must DOI network need provide read-username password.","code":""},{"path":"https://wright13.github.io/imd-fetchaquarius/reference/connectToAquarius.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Connect to Aquarius server — connectToAquarius","text":"","code":"connectToAquarius(   username,   password = keyring::key_get(\"aquarius\", username),   hostname = \"https://aquarius.nps.gov/aquarius\",   publish_api_url = \"https://aquarius.nps.gov/aquarius/Publish/v2\" )"},{"path":"https://wright13.github.io/imd-fetchaquarius/reference/connectToAquarius.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Connect to Aquarius server — connectToAquarius","text":"username AQTS credentials username password AQTS credentials password hostname server name IP address publish_api_url URL Aquarius Publish API.","code":""},{"path":"https://wright13.github.io/imd-fetchaquarius/reference/connectToAquarius.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Connect to Aquarius server — connectToAquarius","text":"Invisibly returns server response","code":""},{"path":"https://wright13.github.io/imd-fetchaquarius/reference/connectToAquarius.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Connect to Aquarius server — connectToAquarius","text":"","code":"if (FALSE) { keyring::key_set(\"aquarius\", \"aqreadonly\")  # Save credentials in keyring - only need to do this once per user & computer connectToAquarius(\"aqreadonly\")  # Connect to Aquarius using password saved in keyring }"},{"path":"https://wright13.github.io/imd-fetchaquarius/reference/disconnectFromAquarius.html","id":null,"dir":"Reference","previous_headings":"","what":"Disconnect from Aquarius server — disconnectFromAquarius","title":"Disconnect from Aquarius server — disconnectFromAquarius","text":"Use function log done retrieving data.","code":""},{"path":"https://wright13.github.io/imd-fetchaquarius/reference/disconnectFromAquarius.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Disconnect from Aquarius server — disconnectFromAquarius","text":"","code":"disconnectFromAquarius()"},{"path":"https://wright13.github.io/imd-fetchaquarius/reference/disconnectFromAquarius.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Disconnect from Aquarius server — disconnectFromAquarius","text":"","code":"if (FALSE) { disconnectFromAquarius() }"},{"path":"https://wright13.github.io/imd-fetchaquarius/reference/getFolders.html","id":null,"dir":"Reference","previous_headings":"","what":"Get names of folders in Aquarius — getFolders","title":"Get names of folders in Aquarius — getFolders","text":"Use see names folders Aquarius. Use search_string see folder names containing text.","code":""},{"path":"https://wright13.github.io/imd-fetchaquarius/reference/getFolders.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get names of folders in Aquarius — getFolders","text":"","code":"getFolders(search_string)"},{"path":"https://wright13.github.io/imd-fetchaquarius/reference/getFolders.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get names of folders in Aquarius — getFolders","text":"search_string Optional. Text search folder names. Accepts regular expressions. Case insensitive.","code":""},{"path":"https://wright13.github.io/imd-fetchaquarius/reference/getFolders.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get names of folders in Aquarius — getFolders","text":"Character vector folder names","code":""},{"path":"https://wright13.github.io/imd-fetchaquarius/reference/getFolders.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get names of folders in Aquarius — getFolders","text":"","code":"if (FALSE) { getFolders() getFolders(\"OLYM\") }"},{"path":"https://wright13.github.io/imd-fetchaquarius/reference/getLocationInfo.html","id":null,"dir":"Reference","previous_headings":"","what":"Get information about locations in Aquarius — getLocationInfo","title":"Get information about locations in Aquarius — getLocationInfo","text":"Use see locations Aquarius.","code":""},{"path":"https://wright13.github.io/imd-fetchaquarius/reference/getLocationInfo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get information about locations in Aquarius — getLocationInfo","text":"","code":"getLocationInfo(search_string, folder, include_subfolders = TRUE)"},{"path":"https://wright13.github.io/imd-fetchaquarius/reference/getLocationInfo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get information about locations in Aquarius — getLocationInfo","text":"search_string Optional. Text search location names identifiers. Accepts regular expressions. Case insensitive. folder Optional. Limit results locations folder. must use full folder name (e.g. \"National Park Service.Klamath Network\", \"Klamath Network\"). include_subfolders Ignored folder specified. Indicates whether results include locations subfolders.","code":""},{"path":"https://wright13.github.io/imd-fetchaquarius/reference/getLocationInfo.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get information about locations in Aquarius — getLocationInfo","text":"Tibble containing location information","code":""},{"path":"https://wright13.github.io/imd-fetchaquarius/reference/getLocationInfo.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get information about locations in Aquarius — getLocationInfo","text":"","code":"if (FALSE) { getLocationInfo() }"},{"path":"https://wright13.github.io/imd-fetchaquarius/reference/getTimeSeries.html","id":null,"dir":"Reference","previous_headings":"","what":"Get corrected time series data — getTimeSeries","title":"Get corrected time series data — getTimeSeries","text":"Get corrected time series data","code":""},{"path":"https://wright13.github.io/imd-fetchaquarius/reference/getTimeSeries.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get corrected time series data — getTimeSeries","text":"","code":"getTimeSeries(ts_id, start, end)"},{"path":"https://wright13.github.io/imd-fetchaquarius/reference/getTimeSeries.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get corrected time series data — getTimeSeries","text":"ts_id Time series identifier start Optional. retrieve data including date/time. Can R POSIXct object, character string ISO 8601 format (YYYY-MM-DDThh:mm:ss+/-hh:mm) end Optional. retrieve data including date/time. Can R POSIXct object, character string ISO 8601 format (YYYY-MM-DDThh:mm:ss+/-hh:mm)","code":""},{"path":"https://wright13.github.io/imd-fetchaquarius/reference/getTimeSeries.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get corrected time series data — getTimeSeries","text":"list includes timeseries data metadata","code":""},{"path":"https://wright13.github.io/imd-fetchaquarius/reference/getTimeSeries.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get corrected time series data — getTimeSeries","text":"","code":"if (FALSE) { # Get timeseries data from Jan 1 2012 at midnight PST to Jan 1 2013 at midnight PST. time_series <- getTimeSeries(\"Discharge.Working@Location\", start = \"2012-01-01T00:00:00−08:00\", end = \"2013-01-01T00:00:00−08:00\") }"},{"path":"https://wright13.github.io/imd-fetchaquarius/reference/getTimeSeriesByFolder.html","id":null,"dir":"Reference","previous_headings":"","what":"Get all corrected time series data in a folder containing multiple locations — getTimeSeriesByFolder","title":"Get all corrected time series data in a folder containing multiple locations — getTimeSeriesByFolder","text":"Get corrected time series data folder containing multiple locations","code":""},{"path":"https://wright13.github.io/imd-fetchaquarius/reference/getTimeSeriesByFolder.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get all corrected time series data in a folder containing multiple locations — getTimeSeriesByFolder","text":"","code":"getTimeSeriesByFolder(   folder,   parameters,   labels,   start,   end,   include_subfolders = TRUE )"},{"path":"https://wright13.github.io/imd-fetchaquarius/reference/getTimeSeriesByFolder.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get all corrected time series data in a folder containing multiple locations — getTimeSeriesByFolder","text":"folder Limit results locations folder. must use full folder name (e.g. \"National Park Service.Klamath Network\", \"Klamath Network\") parameters character vector parameters include labels character vector labels include start Optional. retrieve data including date/time. Can R POSIXct object, character string ISO 8601 format (YYYY-MM-DDThh:mm:ss+/-hh:mm) end Optional. retrieve data including date/time. Can R POSIXct object, character string ISO 8601 format (YYYY-MM-DDThh:mm:ss+/-hh:mm) include_subfolders Ignored folder specified. Indicates whether results include locations subfolders.","code":""},{"path":"https://wright13.github.io/imd-fetchaquarius/reference/getTimeSeriesByFolder.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get all corrected time series data in a folder containing multiple locations — getTimeSeriesByFolder","text":"list time series location","code":""},{"path":"https://wright13.github.io/imd-fetchaquarius/reference/getTimeSeriesByFolder.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get all corrected time series data in a folder containing multiple locations — getTimeSeriesByFolder","text":"","code":"if (FALSE) { olym_clim_ts <- getTimeSeriesByFolder(\"OLYM_Climate\", c(\"Air Temp\", \"Snow Depth\"), c(\"Avg\", \"Depth\")) }"},{"path":"https://wright13.github.io/imd-fetchaquarius/reference/getTimeSeriesByLocation.html","id":null,"dir":"Reference","previous_headings":"","what":"Get all corrected time series data at a location — getTimeSeriesByLocation","title":"Get all corrected time series data at a location — getTimeSeriesByLocation","text":"Get corrected time series data location","code":""},{"path":"https://wright13.github.io/imd-fetchaquarius/reference/getTimeSeriesByLocation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get all corrected time series data at a location — getTimeSeriesByLocation","text":"","code":"getTimeSeriesByLocation(loc_ids, parameters, labels, start, end)"},{"path":"https://wright13.github.io/imd-fetchaquarius/reference/getTimeSeriesByLocation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get all corrected time series data at a location — getTimeSeriesByLocation","text":"loc_ids character vector location identifiers parameters character vector parameters include labels character vector labels include start Optional. retrieve data including date/time. Can R POSIXct object, character string ISO 8601 format (YYYY-MM-DDThh:mm:ss+/-hh:mm) end Optional. retrieve data including date/time. Can R POSIXct object, character string ISO 8601 format (YYYY-MM-DDThh:mm:ss+/-hh:mm)","code":""},{"path":"https://wright13.github.io/imd-fetchaquarius/reference/getTimeSeriesByLocation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get all corrected time series data at a location — getTimeSeriesByLocation","text":"list time series location","code":""},{"path":"https://wright13.github.io/imd-fetchaquarius/reference/getTimeSeriesByLocation.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get all corrected time series data at a location — getTimeSeriesByLocation","text":"","code":"if (FALSE) { olym_clim_ts <- getTimeSeriesByLocation(\"OLYM_MET_DPC\", c(\"Air Temp\", \"Snow Depth\"), c(\"Avg\", \"Depth\")) }"},{"path":"https://wright13.github.io/imd-fetchaquarius/reference/getTimeSeriesInfo.html","id":null,"dir":"Reference","previous_headings":"","what":"Get list of datasets at a location — getTimeSeriesInfo","title":"Get list of datasets at a location — getTimeSeriesInfo","text":"Get list datasets location","code":""},{"path":"https://wright13.github.io/imd-fetchaquarius/reference/getTimeSeriesInfo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get list of datasets at a location — getTimeSeriesInfo","text":"","code":"getTimeSeriesInfo(loc_ids)"},{"path":"https://wright13.github.io/imd-fetchaquarius/reference/getTimeSeriesInfo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get list of datasets at a location — getTimeSeriesInfo","text":"loc_ids Character vector location identifier(s)","code":""},{"path":"https://wright13.github.io/imd-fetchaquarius/reference/getTimeSeriesInfo.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get list of datasets at a location — getTimeSeriesInfo","text":"tibble one line per dataset","code":""},{"path":"https://wright13.github.io/imd-fetchaquarius/reference/getTimeSeriesInfo.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get list of datasets at a location — getTimeSeriesInfo","text":"","code":"if (FALSE) { getDatasetInfo(\"MORA_SUP\") }"},{"path":"https://wright13.github.io/imd-fetchaquarius/reference/timeseriesClient.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a simple AQUARIUS Time-Series API client. — timeseriesClient","title":"Create a simple AQUARIUS Time-Series API client. — timeseriesClient","text":"Create simple AQUARIUS Time-Series API client.","code":""},{"path":"https://wright13.github.io/imd-fetchaquarius/reference/timeseriesClient_configureProxy.html","id":null,"dir":"Reference","previous_headings":"","what":"Auto-configures the proxy to route all requests through Fiddler — timeseriesClient_configureProxy","title":"Auto-configures the proxy to route all requests through Fiddler — timeseriesClient_configureProxy","text":"method configures R proxy route everything Fiddler running","code":""},{"path":"https://wright13.github.io/imd-fetchaquarius/reference/timeseriesClient_configureProxy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Auto-configures the proxy to route all requests through Fiddler — timeseriesClient_configureProxy","text":"None","code":""},{"path":"https://wright13.github.io/imd-fetchaquarius/reference/timeseriesClient_configureProxy.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Auto-configures the proxy to route all requests through Fiddler — timeseriesClient_configureProxy","text":"","code":"if (FALSE) { Sys.setenv(http_proxy=\"http://localhost:8888\") # Enables Fiddler capturing of traffic Sys.setenv(http_proxy=\"\") # Disables Fiddler proxying }"},{"path":"https://wright13.github.io/imd-fetchaquarius/reference/timeseriesClient_connect.html","id":null,"dir":"Reference","previous_headings":"","what":"Connects to an AQTS server — timeseriesClient_connect","title":"Connects to an AQTS server — timeseriesClient_connect","text":"authenticated, subsequent requests AQTS server reuse authenticated session","code":""},{"path":"https://wright13.github.io/imd-fetchaquarius/reference/timeseriesClient_connect.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Connects to an AQTS server — timeseriesClient_connect","text":"hostname server name IP address username AQTS credentials username password AQTS credentials password","code":""},{"path":"https://wright13.github.io/imd-fetchaquarius/reference/timeseriesClient_connect.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Connects to an AQTS server — timeseriesClient_connect","text":"","code":"if (FALSE) { connect(\"localhost\", \"admin\", \"admin\") # When running R on your AQTS app server connect(\"myserver\", \"me\", \"mypassword\") # Connect over the network connect(\"https://myserver\", \"user\", \"letmein\") # Connect to an AQTS server with HTTPS enabled }"},{"path":"https://wright13.github.io/imd-fetchaquarius/reference/timeseriesClient_deleteReport.html","id":null,"dir":"Reference","previous_headings":"","what":"Deletes a report — timeseriesClient_deleteReport","title":"Deletes a report — timeseriesClient_deleteReport","text":"Deletes report","code":""},{"path":"https://wright13.github.io/imd-fetchaquarius/reference/timeseriesClient_disconnect.html","id":null,"dir":"Reference","previous_headings":"","what":"Disconnects immediately from an AQTS server — timeseriesClient_disconnect","title":"Disconnects immediately from an AQTS server — timeseriesClient_disconnect","text":"Disconnects immediately AQTS server","code":""},{"path":"https://wright13.github.io/imd-fetchaquarius/reference/timeseriesClient_formatIso8601.html","id":null,"dir":"Reference","previous_headings":"","what":"Formats a datetime in ISO 8601 format — timeseriesClient_formatIso8601","title":"Formats a datetime in ISO 8601 format — timeseriesClient_formatIso8601","text":"Formats datetime ISO 8601 format","code":""},{"path":"https://wright13.github.io/imd-fetchaquarius/reference/timeseriesClient_formatIso8601.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Formats a datetime in ISO 8601 format — timeseriesClient_formatIso8601","text":"datetime datetime object","code":""},{"path":"https://wright13.github.io/imd-fetchaquarius/reference/timeseriesClient_formatIso8601.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Formats a datetime in ISO 8601 format — timeseriesClient_formatIso8601","text":"time YYYY-MM-DDTHH:mm:SS.fffffZ format","code":""},{"path":"https://wright13.github.io/imd-fetchaquarius/reference/timeseriesClient_getFieldVisits.html","id":null,"dir":"Reference","previous_headings":"","what":"Gets field visits — timeseriesClient_getFieldVisits","title":"Gets field visits — timeseriesClient_getFieldVisits","text":"Gets field visits activities","code":""},{"path":"https://wright13.github.io/imd-fetchaquarius/reference/timeseriesClient_getFieldVisits.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Gets field visits — timeseriesClient_getFieldVisits","text":"locationIdentifier Optional LocationIdentifier filter queryFrom Optional QueryFrom filter queryTo Optional QueryTo filter activityType Optional DiscreteMeasurementActivity filter","code":""},{"path":"https://wright13.github.io/imd-fetchaquarius/reference/timeseriesClient_getFieldVisits.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Gets field visits — timeseriesClient_getFieldVisits","text":"activities performed locations requested time range","code":""},{"path":"https://wright13.github.io/imd-fetchaquarius/reference/timeseriesClient_getLocationData.html","id":null,"dir":"Reference","previous_headings":"","what":"Gets the location data for a location — timeseriesClient_getLocationData","title":"Gets the location data for a location — timeseriesClient_getLocationData","text":"Gets location data location","code":""},{"path":"https://wright13.github.io/imd-fetchaquarius/reference/timeseriesClient_getLocationIdentifier.html","id":null,"dir":"Reference","previous_headings":"","what":"Gets the location identifier from a time series identifier string — timeseriesClient_getLocationIdentifier","title":"Gets the location identifier from a time series identifier string — timeseriesClient_getLocationIdentifier","text":"Gets location identifier time series identifier string","code":""},{"path":"https://wright13.github.io/imd-fetchaquarius/reference/timeseriesClient_getLocationIdentifier.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Gets the location identifier from a time series identifier string — timeseriesClient_getLocationIdentifier","text":"timeSeriesIdentifier time-series identifier \\<Parameter\\>.\\<Label\\>\\@\\<LocationIdentifier\\> syntax","code":""},{"path":"https://wright13.github.io/imd-fetchaquarius/reference/timeseriesClient_getLocationIdentifier.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Gets the location identifier from a time series identifier string — timeseriesClient_getLocationIdentifier","text":"identifier location","code":""},{"path":"https://wright13.github.io/imd-fetchaquarius/reference/timeseriesClient_getLocationIdentifier.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Gets the location identifier from a time series identifier string — timeseriesClient_getLocationIdentifier","text":"","code":"if (FALSE) { getLocationIdentifier(\"Stage.Working@MyLocation\") # MyLocation }"},{"path":"https://wright13.github.io/imd-fetchaquarius/reference/timeseriesClient_getMetadataChangeTransactionList.html","id":null,"dir":"Reference","previous_headings":"","what":"Gets Change list for a given time-series — timeseriesClient_getMetadataChangeTransactionList","title":"Gets Change list for a given time-series — timeseriesClient_getMetadataChangeTransactionList","text":"Gets Change list given time-series","code":""},{"path":"https://wright13.github.io/imd-fetchaquarius/reference/timeseriesClient_getMetadataChangeTransactionList.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Gets Change list for a given time-series — timeseriesClient_getMetadataChangeTransactionList","text":"timeSeriesIdentifier time-series identifier unique ID queryFrom Optional QueryFrom filter queryTo Optional QueryTo filter","code":""},{"path":"https://wright13.github.io/imd-fetchaquarius/reference/timeseriesClient_getMetadataChangeTransactionList.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Gets Change list for a given time-series — timeseriesClient_getMetadataChangeTransactionList","text":"list change trasactions","code":""},{"path":"https://wright13.github.io/imd-fetchaquarius/reference/timeseriesClient_getRatingModelOutputValues.html","id":null,"dir":"Reference","previous_headings":"","what":"Gets output values from a rating model — timeseriesClient_getRatingModelOutputValues","title":"Gets output values from a rating model — timeseriesClient_getRatingModelOutputValues","text":"Gets output values rating model","code":""},{"path":"https://wright13.github.io/imd-fetchaquarius/reference/timeseriesClient_getRatingModelOutputValues.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Gets output values from a rating model — timeseriesClient_getRatingModelOutputValues","text":"ratingModelIdentifier identifier rating model inputValues list input values run model effectiveTime Optional time applicability. Assumes current time omitted applyShifts Optional boolean, defaults FALSE","code":""},{"path":"https://wright13.github.io/imd-fetchaquarius/reference/timeseriesClient_getRatingModelOutputValues.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Gets output values from a rating model — timeseriesClient_getRatingModelOutputValues","text":"output values applicable curve rating model. output value NA returned input outside curve.","code":""},{"path":"https://wright13.github.io/imd-fetchaquarius/reference/timeseriesClient_getRatings.html","id":null,"dir":"Reference","previous_headings":"","what":"Gets the rating models matching the optional filters — timeseriesClient_getRatings","title":"Gets the rating models matching the optional filters — timeseriesClient_getRatings","text":"Retrieves rating models applicable curves","code":""},{"path":"https://wright13.github.io/imd-fetchaquarius/reference/timeseriesClient_getRatings.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Gets the rating models matching the optional filters — timeseriesClient_getRatings","text":"locationIdentifier Optional LocationIdentifier filter queryFrom Optional QueryFrom filter queryTo Optional QueryTo filter inputParameter Optional InputParameter filter outputParameter Optional OutputParameter filter","code":""},{"path":"https://wright13.github.io/imd-fetchaquarius/reference/timeseriesClient_getRatings.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Gets the rating models matching the optional filters — timeseriesClient_getRatings","text":"list rating models applicable curves","code":""},{"path":"https://wright13.github.io/imd-fetchaquarius/reference/timeseriesClient_getRatings.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Gets the rating models matching the optional filters — timeseriesClient_getRatings","text":"","code":"if (FALSE) { # Get all the ratings in effect during October 2016 at a location ratings = timeseries$getRatings(\"A015001\", \"2016-10-01\", \"2016-10-31\") ratings$Identifier ratings$Curves$Type }"},{"path":"https://wright13.github.io/imd-fetchaquarius/reference/timeseriesClient_getReportList.html","id":null,"dir":"Reference","previous_headings":"","what":"Gets a list of reports — timeseriesClient_getReportList","title":"Gets a list of reports — timeseriesClient_getReportList","text":"Gets list reports","code":""},{"path":"https://wright13.github.io/imd-fetchaquarius/reference/timeseriesClient_getTimeSeriesCorrectedData.html","id":null,"dir":"Reference","previous_headings":"","what":"Get corrected data for a time-series — timeseriesClient_getTimeSeriesCorrectedData","title":"Get corrected data for a time-series — timeseriesClient_getTimeSeriesCorrectedData","text":"getTimeSeriesData() method usually better choice, since can pull corrected data multiple time-series. need look metadata time-series, method required.","code":""},{"path":"https://wright13.github.io/imd-fetchaquarius/reference/timeseriesClient_getTimeSeriesCorrectedData.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get corrected data for a time-series — timeseriesClient_getTimeSeriesCorrectedData","text":"timeSeriesIdentifier time-series identifier unique ID","code":""},{"path":"https://wright13.github.io/imd-fetchaquarius/reference/timeseriesClient_getTimeSeriesCorrectedData.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get corrected data for a time-series — timeseriesClient_getTimeSeriesCorrectedData","text":"corrected data metadata time-series","code":""},{"path":"https://wright13.github.io/imd-fetchaquarius/reference/timeseriesClient_getTimeSeriesData.html","id":null,"dir":"Reference","previous_headings":"","what":"Gets time-series points for multiple time-series — timeseriesClient_getTimeSeriesData","title":"Gets time-series points for multiple time-series — timeseriesClient_getTimeSeriesData","text":"Retrieves points 10 time-series. Point values secondary time-series time-aligned via interpolation rules timestamps first time-series.","code":""},{"path":"https://wright13.github.io/imd-fetchaquarius/reference/timeseriesClient_getTimeSeriesData.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Gets time-series points for multiple time-series — timeseriesClient_getTimeSeriesData","text":"timeSeriesIds list time-series identifiers unique IDs queryFrom Optional time retrieve data.missing, fetches data start--record queryTo Optional time data willl retrieved. missing, fetches data end--record outputUnitIds Optional unit IDs output. missing empty, default unit time-series used","code":""},{"path":"https://wright13.github.io/imd-fetchaquarius/reference/timeseriesClient_getTimeSeriesData.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Gets time-series points for multiple time-series — timeseriesClient_getTimeSeriesData","text":"JSON object /GetTimeSeriesData response","code":""},{"path":"https://wright13.github.io/imd-fetchaquarius/reference/timeseriesClient_getTimeSeriesData.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Gets time-series points for multiple time-series — timeseriesClient_getTimeSeriesData","text":"","code":"if (FALSE) { ## Get the discharge and stage timeseries for 2012 json = timeseries$getTimeSeriesData(c(\"Discharge.Working@Location\",\"Stage.Working@Location\"),                                     queryFrom = \"2012-01-01T00:00:00Z\",                                     queryTo   = \"2013-01-01T00:00:00Z\")  ## Plot stage vs dicharge plot(json$Points$NumericValue1, json$Points$NumericValue2)  ## Plot stage vs dicharge, with log scale, and some labeled axis plot(json$Points$NumericValue1, json$Points$NumericValue2, log = \"xy\",      xlab = json$TimeSeries$Identifier[1],      ylab = json$TimeSeries$Identifier[2]) }"},{"path":"https://wright13.github.io/imd-fetchaquarius/reference/timeseriesClient_getTimeSeriesDescriptions.html","id":null,"dir":"Reference","previous_headings":"","what":"Fetch all requested time-series descriptions matching the filter — timeseriesClient_getTimeSeriesDescriptions","title":"Fetch all requested time-series descriptions matching the filter — timeseriesClient_getTimeSeriesDescriptions","text":"Fetch requested time-series descriptions matching filter","code":""},{"path":"https://wright13.github.io/imd-fetchaquarius/reference/timeseriesClient_getTimeSeriesDescriptions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fetch all requested time-series descriptions matching the filter — timeseriesClient_getTimeSeriesDescriptions","text":"locationIdentifier Optional location identifier filter parameter Optional parameter filter publish Optional publish filter computationIdentifier Optional computation identifier filter computationPeriodIdentifier Optional computation period identifier filter extendedFilters Optional extended attribute filter","code":""},{"path":"https://wright13.github.io/imd-fetchaquarius/reference/timeseriesClient_getTimeSeriesDescriptions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fetch all requested time-series descriptions matching the filter — timeseriesClient_getTimeSeriesDescriptions","text":"time-series descriptions matching filters","code":""},{"path":"https://wright13.github.io/imd-fetchaquarius/reference/timeseriesClient_getTimeSeriesUniqueId.html","id":null,"dir":"Reference","previous_headings":"","what":"Gets the unique ID of a time-series from its identifier string — timeseriesClient_getTimeSeriesUniqueId","title":"Gets the unique ID of a time-series from its identifier string — timeseriesClient_getTimeSeriesUniqueId","text":"input string already unique ID, input value simply returned unmodified.","code":""},{"path":"https://wright13.github.io/imd-fetchaquarius/reference/timeseriesClient_getTimeSeriesUniqueId.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Gets the unique ID of a time-series from its identifier string — timeseriesClient_getTimeSeriesUniqueId","text":"timeSeriesIdentifier time-series identifier \\<Parameter\\>.\\<Label\\>\\@\\<LocationIdentifier\\> syntax","code":""},{"path":"https://wright13.github.io/imd-fetchaquarius/reference/timeseriesClient_getTimeSeriesUniqueId.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Gets the unique ID of a time-series from its identifier string — timeseriesClient_getTimeSeriesUniqueId","text":"unique ID time-series","code":""},{"path":"https://wright13.github.io/imd-fetchaquarius/reference/timeseriesClient_getTimeSeriesUniqueId.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Gets the unique ID of a time-series from its identifier string — timeseriesClient_getTimeSeriesUniqueId","text":"","code":"if (FALSE) { getTimeSeriesUniqueId(\"Stage.Working@MyLocation\") # cdf184928c8249abb872f852f0fa7d01 }"},{"path":"https://wright13.github.io/imd-fetchaquarius/reference/timeseriesClient_getUtcOffsetText.html","id":null,"dir":"Reference","previous_headings":"","what":"Gets the UTC offset string from a numeric UTC offset hours value — timeseriesClient_getUtcOffsetText","title":"Gets the UTC offset string from a numeric UTC offset hours value — timeseriesClient_getUtcOffsetText","text":"Gets UTC offset string numeric UTC offset hours value","code":""},{"path":"https://wright13.github.io/imd-fetchaquarius/reference/timeseriesClient_getUtcOffsetText.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Gets the UTC offset string from a numeric UTC offset hours value — timeseriesClient_getUtcOffsetText","text":"utcOffset UTC offset hours","code":""},{"path":"https://wright13.github.io/imd-fetchaquarius/reference/timeseriesClient_getUtcOffsetText.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Gets the UTC offset string from a numeric UTC offset hours value — timeseriesClient_getUtcOffsetText","text":"ISO8601 UTC offset string +/-HH:MM format","code":""},{"path":"https://wright13.github.io/imd-fetchaquarius/reference/timeseriesClient_getUtcOffsetText.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Gets the UTC offset string from a numeric UTC offset hours value — timeseriesClient_getUtcOffsetText","text":"","code":"if (FALSE) { getUtcOffsetText(-8) # \"-08:00\" getUtcOffsetText(2.5) # \"+02:30\" }"},{"path":"https://wright13.github.io/imd-fetchaquarius/reference/timeseriesClient_isVersionLessThan.html","id":null,"dir":"Reference","previous_headings":"","what":"Determines if a target version string is strictly less than a source version — timeseriesClient_isVersionLessThan","title":"Determines if a target version string is strictly less than a source version — timeseriesClient_isVersionLessThan","text":"method takes dotted version strings compares numerical components. safely avoids errors string comparison, incorrectly says \"3.10.510\" > \"17.2.123\".","code":""},{"path":"https://wright13.github.io/imd-fetchaquarius/reference/timeseriesClient_isVersionLessThan.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Determines if a target version string is strictly less than a source version — timeseriesClient_isVersionLessThan","text":"targetVersion Target version string sourceVersion Optional source version string. missing, use connected server version","code":""},{"path":"https://wright13.github.io/imd-fetchaquarius/reference/timeseriesClient_isVersionLessThan.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Determines if a target version string is strictly less than a source version — timeseriesClient_isVersionLessThan","text":"TRUE target version strictly less source version","code":""},{"path":"https://wright13.github.io/imd-fetchaquarius/reference/timeseriesClient_parseIso8601.html","id":null,"dir":"Reference","previous_headings":"","what":"Parse an ISO 8601 timestamp into a POSIXct value — timeseriesClient_parseIso8601","title":"Parse an ISO 8601 timestamp into a POSIXct value — timeseriesClient_parseIso8601","text":"Parse ISO 8601 timestamp POSIXct value","code":""},{"path":"https://wright13.github.io/imd-fetchaquarius/reference/timeseriesClient_parseIso8601.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parse an ISO 8601 timestamp into a POSIXct value — timeseriesClient_parseIso8601","text":"isoText ISO 8601 timestamp string","code":""},{"path":"https://wright13.github.io/imd-fetchaquarius/reference/timeseriesClient_parseIso8601.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parse an ISO 8601 timestamp into a POSIXct value — timeseriesClient_parseIso8601","text":"equivalent POSIXct datetime","code":""},{"path":"https://wright13.github.io/imd-fetchaquarius/reference/timeseriesClient_sendBatchRequests.html","id":null,"dir":"Reference","previous_headings":"","what":"Performs a batch of identical operations — timeseriesClient_sendBatchRequests","title":"Performs a batch of identical operations — timeseriesClient_sendBatchRequests","text":"method useful requesting large amounts similar data AQTS, taking advantage ServiceStack's support auto-batched requests.","code":""},{"path":"https://wright13.github.io/imd-fetchaquarius/reference/timeseriesClient_sendBatchRequests.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Performs a batch of identical operations — timeseriesClient_sendBatchRequests","text":"endpoint base REST endpoint operationName name operation, AQTS Metadata page, perform multiple times. route, operation name. operationRoute route operation requests collection individual request objects batchSize Optional batch size (defaults 100 requests per batch) verb Optional HTTP verb operation (defaults \"GET\")","code":""},{"path":"https://wright13.github.io/imd-fetchaquarius/reference/timeseriesClient_sendBatchRequests.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Performs a batch of identical operations — timeseriesClient_sendBatchRequests","text":"single dataframe containing batched responses","code":""},{"path":"https://wright13.github.io/imd-fetchaquarius/reference/timeseriesClient_sendBatchRequests.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Performs a batch of identical operations — timeseriesClient_sendBatchRequests","text":"http://docs.servicestack.net/auto-batched-requests find public API supports 1---time approach, code needs request thousands items, sendBatchRequests() method one use.","code":""},{"path":"https://wright13.github.io/imd-fetchaquarius/reference/timeseriesClient_sendBatchRequests.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Performs a batch of identical operations — timeseriesClient_sendBatchRequests","text":"","code":"if (FALSE) { # Request info for 3 locations. # Single-request URL is GET /Publish/v2/GetLocationData?LocationIdentifer=loc1 # Operation name is \"LocationDataServiceRequest\" requests = c(list(LocationIdentifier=\"Loc1\"), list(LocationIdentifier=\"Loc3\"), list(LocationIdentifier=\"Loc3\")) responses = timeseries$sendBatchRequests(timeseries$publishUri,\"LocationDataServiceRequest\", requests) }"},{"path":"https://wright13.github.io/imd-fetchaquarius/reference/timeseriesClient_toJSV.html","id":null,"dir":"Reference","previous_headings":"","what":"Converts an item to JSV format, for GET request query parameter values — timeseriesClient_toJSV","title":"Converts an item to JSV format, for GET request query parameter values — timeseriesClient_toJSV","text":"Converts vectors named lists JSV. Everything else left unmodified. Query parameters GET request need JSV format. JSON body parameters POST/PUT/DELETE requests need JSV formatting (, JSON) https://github.com/ServiceStack/ServiceStack.Text/wiki/JSV-Format","code":""},{"path":"https://wright13.github.io/imd-fetchaquarius/reference/timeseriesClient_uploadExternalReport.html","id":null,"dir":"Reference","previous_headings":"","what":"Uploads a file to a location as an external report — timeseriesClient_uploadExternalReport","title":"Uploads a file to a location as an external report — timeseriesClient_uploadExternalReport","text":"existing report AQTS title ","code":""},{"path":"https://wright13.github.io/imd-fetchaquarius/reference/timeseriesClient_uploadExternalReport.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Uploads a file to a location as an external report — timeseriesClient_uploadExternalReport","text":"locationDataOrIdentifier Either location identifier string, LocationData object previous getLocationData request path path file uploaded title title report display AQTS deleteDuplicateReports TRUE missing, existing reports title deleted new report uploaded","code":""},{"path":"https://wright13.github.io/imd-fetchaquarius/reference/timeseriesClient_uploadExternalReport.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Uploads a file to a location as an external report — timeseriesClient_uploadExternalReport","text":"JSON response successful upload","code":""}]
